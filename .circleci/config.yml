version: 2.1
orbs:
  vault: contentful/vault@1

executors:
  docker-with-node:
    docker:
      - image: cimg/node:16.19.0
    working_directory: ~/circleci-build

commands:
  install:
    steps:
      - restore_cache:
          keys:
            - npm-cache-{{ checksum ".nvmrc" }}-{{ checksum "package-lock.json" }}
            - npm-cache
      - run: npm ci --prefer-offline
      - save_cache:
          key: npm-cache-{{ checksum ".nvmrc" }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
  use-vault:
    steps:
      - vault/get-secrets:
        template-preset: 'semantic-release-ecosystem'

jobs:
  prepare:
    executor: docker-with-node
    working_directory: ~/circleci-build
    steps:
      - run: node --version
      - checkout
      - install
      - persist_to_workspace:
          root: .
          paths:
            - .

  lint:
    executor: docker-with-node
    steps:
      - attach_workspace:
          at: ~/circleci-build
      - run: npm run prettier:check
      - run: npm run lint
      - run: npm run check-types

  unit:
    executor: docker-with-node
    steps:
      - attach_workspace:
          at: ~/circleci-build
      - run: npm run test:cover-unit
      - store_test_results:
          path: reports
      - store_artifacts:
          path: ./reports/unit-results.xml

  integration:
    executor: docker-with-node
    steps:
      - attach_workspace:
          at: ~/circleci-build
      - run: npm run test:cover-integration
      - store_test_results:
          path: reports
      - store_artifacts:
          path: ./reports/integration-results.xml

  release:
    executor: docker-with-node
    steps:
      - attach_workspace:
          at: ~/circleci-build
      - use-vault
      - run: npm run semantic-release

workflows:
  version: 2
  build_and_test:
    jobs:
      - prepare
      - lint:
          requires:
            - prepare
      - unit:
          requires:
            - prepare
      - integration:
          requires:
            - prepare
            - lint
            - unit
      - release:
          context: vault
          requires:
            - prepare
            - lint
            - unit
            - integration
          filters:
            branches:
              only:
                - master
                - next
                - next-major
